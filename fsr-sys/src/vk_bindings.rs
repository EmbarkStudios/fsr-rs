/* automatically generated by rust-bindgen 0.69.4 */

extern "C" {
    #[link_name = "\u{1}ffxFsr2GetScratchMemorySizeVK"]
    pub fn getScratchMemorySize(physicalDevice: VkPhysicalDevice) -> usize;
}
extern "C" {
    #[link_name = "\u{1}ffxFsr2GetInterfaceVK"]
    pub fn getInterface(
        outInterface: *mut Interface,
        scratchBuffer: *mut ::std::os::raw::c_void,
        scratchBufferSize: usize,
        physicalDevice: VkPhysicalDevice,
        getDeviceProcAddr: PFN_vkGetDeviceProcAddr,
    ) -> ErrorCode;
}
extern "C" {
    #[link_name = "\u{1}ffxGetDeviceVK"]
    pub fn getDevice(device: VkDevice) -> Device;
}
extern "C" {
    #[link_name = "\u{1}ffxGetCommandListVK"]
    pub fn getCommandList(cmdBuf: VkCommandBuffer) -> CommandList;
}
extern "C" {
    #[link_name = "\u{1}ffxGetTextureResourceVK"]
    pub fn getTextureResource(
        context: *mut Context,
        imgVk: VkImage,
        imageView: VkImageView,
        width: u32,
        height: u32,
        imgFormat: VkFormat,
        name: *const u16,
        state: ResourceStates,
    ) -> Resource;
}
extern "C" {
    #[link_name = "\u{1}ffxGetBufferResourceVK"]
    pub fn getBufferResource(
        context: *mut Context,
        bufVk: VkBuffer,
        size: u32,
        name: *const u16,
        state: ResourceStates,
    ) -> Resource;
}
extern "C" {
    #[link_name = "\u{1}ffxGetVkImage"]
    pub fn getVkImage(context: *mut Context, resId: u32) -> VkImage;
}
extern "C" {
    #[link_name = "\u{1}ffxGetVkImageView"]
    pub fn getVkImageView(context: *mut Context, resId: u32) -> VkImageView;
}
extern "C" {
    #[link_name = "\u{1}ffxGetVkImageLayout"]
    pub fn getVkImageLayout(context: *mut Context, resId: u32) -> VkImageLayout;
}
